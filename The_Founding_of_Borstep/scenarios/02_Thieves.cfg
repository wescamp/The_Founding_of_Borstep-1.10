#textdomain wesnoth-The_Founding_of_Borstep

# Every turn, boars are spawned in the forest. The number of new ones each turn
# is rand. Spawning will stop if the number of animals in play reaches a defined
# maximum. Boars are only spawned in forest clearings: grass surrounded on most
# sides by forest. They will avoid the area right around the saurian leaders so
# that the leaders won't suicidally attack them.

# If the player kills an animal, every orc recieves 2, 4, or 6 hitpoints
# depending on the level of the boar (which can be 0, 1 or 2). Saurians are not
# healed the same way. (They aren't hungry, I guess.)

[scenario]
	[music]
		play_once=yes
		name=breaking_the_chains.ogg
	[/music]
	
	[story]
		[part]
			story= _ "The weather was clear but brisk as Krag-Ubor lead his people south. The orcs had hunted their own forest bare, so the whole party was uncomfortably hungry, and as they traveled, their hunger only got more insistent. That was not their only problem. Wolf riders returning from the south carrying panniers heavy with gold had been tracked, and as Krag-Ubor began addressing his tribe, bandits were creeping into position."
		[/part]
		[part]
			background=early_farnorth.jpg
			show_title=yes
			{OLD_BATTLE 732 232}
			{NEW_JOURNEY 748 249}
			{NEW_JOURNEY 755 271}
			{NEW_BATTLE 754 297}
	[/part]
	[/story]
	
	name= _ "Thieves"
	map_data="{~add-ons/The_Founding_of_Borstep/maps/Thieves.map}"

	id=Thieves
	next_scenario=Life_and_Undeath

	turns=24
	{DEFAULT_SCHEDULE}
	{PLAYLIST}

	[event]
		name=prestart

		[objectives]
			side=1
			[objective]
				description= _ "Defeat enemy leaders."
				condition=win
			[/objective]
			
			{HOW_TO_LOSE}
			
			note={EARLY_FINISH_BONUS_NOTE}+{NEW_GOLD_CARRYOVER_NOTE_40}
		[/objectives]
		[set_variable]
			name=number_of_animals
			value=0
		[/set_variable]
		[set_variable]
			name=maximum_number_of_animals
			value=10
		[/set_variable]

		[fire_event]
			name=add_animals
		[/fire_event]

		{RECALL_LOYAL_UNITS}
	[/event]

	[side]
		{SIDE_1}
		#wmllint recognize Krag-Ubor
		{GOLD4 200 200 200 200}
	[/side]

	[side]
		side=2
		color=blue
		team_name=saurians
		user_team_name=Saurian Thieves
		name=Tirkzazs
		id=Saurian1
		type=Saurian Ambusher
		canrecruit=yes
		recruit=Saurian Skirmisher, Saurian Augur, Saurian Ambusher, Saurian Oracle
		{GOLD4 200 280 340 400}
	[/side]

	[side]
		side=3
		color=green
		team_name=saurians
		user_team_name=Saurian Thieves
		name=Skritzaz
		id=Saurian2
		type=Saurian Oracle
		canrecruit=yes
		recruit=Saurian Skirmisher, Saurian Augur, Saurian Ambusher, Saurian Oracle
		{GOLD4 200 280 340 400}
	[/side]

#ifdef EASY
	{LIMIT_RECRUITS 2 (Saurian Ambusher) 1}
	{LIMIT_RECRUITS 2 (Saurian Oracle) 2}
	{LIMIT_RECRUITS 3 (Saurian Ambusher) 2}
	{LIMIT_RECRUITS 3 (Saurian Oracle) 1}
#else
	{LIMIT_RECRUITS 2 (Saurian Ambusher) 2}
	{LIMIT_RECRUITS 2 (Saurian Oracle) 2}
	{LIMIT_RECRUITS 3 (Saurian Ambusher) 2}
	{LIMIT_RECRUITS 3 (Saurian Oracle) 2}
#endif

	[side]
		side=4
		color=orange
		no_leader=yes
		[ai]
			caution=0.75
			agression=-1.0
			grouping=no
			village_value=0
			# This is to keep a saurian leader from suicidally attacking a
			# Gorer. If they can't reach one, they won't attack, so we'll keep
			# the pigs away from them:
			[avoid]
				x=30,16
				y=5,40
				radius=7
			[/avoid]
		[/ai]
	[/side]
	
	{STARTING_VILLAGES 1 5}
	{STARTING_VILLAGES 2 7}
	{STARTING_VILLAGES 3 7}
	
	[event]
		name=start
		[if]
			[have_unit]
				id=Varlag
			[/have_unit]
			[then]
				[message]
					speaker=Varlag
					message= _ "We stopped here on our way north. I think it was good hunting."
				[/message]
				[message]
					speaker=Krag-Ubor
					message= _ "Yeah. I can see some pigs in the forests right now. We'll camp here and..."
				[/message]
			[/then]
			[else]
				[message]
					speaker=Krag-Ubor
					message= _ "We stopped here on our way north. There were lots of pigs in the forest. We'll camp here and..."
				[/message]
			[/else]
		[/if]
		[message]
			speaker=Saurian1
			message= _ "Ssstop! We have you surrounded!"
		[/message]
		[message]
			speaker=Varlag
			message= _ "Where did they come from?"
		[/message]
		[message]
			speaker=Saurian2
			message= _ "Now you will give usss your gold."
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "Not a chance. <i>You</i> will give <i>us</i> your <i>heads!</i>"
		[/message]
		[message]
			speaker=Saurian1
			message= _ "Big words for sssuch a pitiful band of orcsss!"
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "Get 'em! And get me some meat too!"
		[/message]
		[message]
			speaker=narrator
			message= _ "Killing wild boars will strengthen the tribe. Every boar you kill will heal each orc by 2, 4, or 6 hitpoints depending on the size of the boar."
			image=wesnoth-icon.png
		[/message]
	[/event]

	[event]
		# Using "new turn" here means that the orcs always get a turn before
		# any new animals do. This way, the player's units won't get killed by
		# animals that weren't there before, which would be frustrating:
		name=new turn
		first_time_only=no

		[fire_event]
			name=add_animals
		[/fire_event]
	[/event]
	
	[event]
		name=add_animals
		first_time_only=no

		# If animals aren't at the maximum, there is a chance to add some. The
		# fewer animals there currently are, the more chances:
		[set_variable]
			name=number_of_chances
			value=$($maximum_number_of_animals - $number_of_animals)
		[/set_variable]

		[while]
			[variable]
				name=number_of_chances
				greater_than=0
			[/variable]
			
			[do]
				[set_variable]
					name=probability
					rand=1..100
				[/set_variable]
				
				# Each chance is 50%:
				[if]
					[variable]
						name=probability
						greater_than=50
					[/variable]
					
					[then]
						# Store possible locations. Animals should appear in
						# a forest clearing, or on the edge of a forest or lake
						# near the forest:
						[store_locations]
							terrain=Gg,Ggf  # Grass...
							[not]
								[filter]
									# ...Not already occupied...
								[/filter]
							[/not]
							[not]
								x=30,16
								y=5,40
								radius=7
							[/not]
							[filter_adjacent_location]
								# ...Mostly surrounded by water / swamp /
								# mushrooms / forested hills / forest:
								count=4,5,6
								terrain=Ww,Ss,Uu^Uf,Hh^F*,Gs^F*
							[/filter_adjacent_location]
							variable=possible_locations
						[/store_locations]

						# The chances of there being no stored locations is
						# almost nonexistent, but it's good practice to make
						# sure anyway:
						[if]
							[variable]
								name=possible_locations.length
								greater_than=0
							[/variable]
							
							[then]
								# Select a rand location from among the
								# possibilities ("location" is an array index):
								[set_variable]
									name=location
									rand=0..$($possible_locations.length - 1)
								[/set_variable]
								
								# The type of animal is rand, except that
								# Gorers are powerful enough that only one
								# should be on the map at a time:
								[if]
									[have_unit]
										type=Gorer
									[/have_unit]
									[then]
										[set_variable]
											name=animal_type
											rand=Tusklet,Tusklet,Tusklet,Tusklet,Tusker
										[/set_variable]
									[/then]
									[else]
										[set_variable]
											name=animal_type
											rand=Tusklet,Tusklet,Tusklet,Tusklet,Tusker,Gorer
										[/set_variable]
									[/else]
								[/if]

								# Put a pig at the randly selected location:
								[unit]
									side=4
									type=$animal_type
									x=$possible_locations[$location].x
									y=$possible_locations[$location].y
								[/unit]
							
								# Keep track of the number of animals:
								[set_variable]
									name=number_of_animals
									add=1
								[/set_variable]
							[/then]
						[/if]
					[/then]
				[/if]
				
				[set_variable]
					name=number_of_chances
					add=-1
				[/set_variable]
			[/do]
		[/while]
		[clear_variable]
			name=location
		[/clear_variable]
		[clear_variable]
			name=probability
		[/clear_variable]
		[clear_variable]
			name=animal_type
		[/clear_variable]
		[clear_variable]
			name=possible_locations
		[/clear_variable]
		[clear_variable]
			name=number_of_chances
		[/clear_variable]
	[/event]
	
	# Keep track of the number of animals:
	[event]
		name=die
		first_time_only=no
		
		[filter]
			side=4
		[/filter]
		
		[set_variable]
			name=number_of_animals
			add=-1
		[/set_variable]
	[/event]

	# Heal all the orcs a bit when an animal is killed:
	[event]
		name=die
		first_time_only=no
		
		[filter]
			side=4
		[/filter]
		[filter_second]
			side=1
		[/filter_second]
		
		[store_unit]
			[filter]
				side=1
			[/filter]
			variable=orcs
		[/store_unit]
		
		{FOREACH orcs orc}
			[heal_unit]
				[filter]
					id=$orcs[$orc].id
				[/filter]
				amount="$($unit.level+1*2)"
				animate=yes
			[/heal_unit]
		{NEXT orc}
		
		[clear_variable]
			name=orcs
		[/clear_variable]
	[/event]
	
	[event]
		name=enemies defeated
		
		[endlevel]
			result=victory
			bonus=yes
			{NEW_GOLD_CARRYOVER 40}
		[/endlevel]

		[clear_variable]
			name=number_of_animals
		[/clear_variable]
		[clear_variable]
			name=maximum_number_of_animals
		[/clear_variable]
		[clear_variable]
			name=heal_amount
		[/clear_variable]
	[/event]
	
	{CLEAR_UNIT_LIMITS}
	{DEFEAT_EVENTS}
[/scenario]