#textdomain wesnoth-The_Founding_of_Borstep

# There are four riderless wolves (images) in the wolf leader's keep. If a goblin
# reaches one of them, he becomes a wolf rider. Any unit reaching the wolf keep
# allows the player to recruit wolf riders.

# Two goblins guard a pile of gold on the south edge of the map. Their status is
# held in the variable gold_guards_passive. If set to "yes", the default, their
# moves are set to 0 each turn. Once one of the player's unit enters the store
# room, gold_guards_passive gets set to "no", and they are free to move and
# attack.

# On turn 6, a bridge oven a chasm opens up the backdoor for the assassins. If
# it's open earlier, the wolves use it, and most of the fighting ends up far
# from the player. On the other hand, if it's never open, one unit can block
# all of player 3's units at the other tunnel. After turn 6 a few of them
# should be able to get out this way.

# There is a room with a bow and arrows for Orcish Archers. The player can
# recruit them once it's been found.

# Another room has a village with a shaman on it. (He never leaves, so the
# village is inaccessable.) When you see him, he offers healing until his
# supplies run out. The healing is very powerful, but can only be used three
# times.

# There is a secret tunnel leading from the starting keep to the gold room. If
# you put a unit on the right bridge, you will find it.

[scenario]
	[music]
		play_once=yes
		name=northerners.ogg
	[/music]

	[story]
		[part]
			story= _ "In the year 9YW, orcs were new to the Great Continent, but when the tribe ruled by Pash-Grod made landfall, the Wesnothians had already learned to fear orcish brutality. The inhabitants of one settlement presented the orcs with gold and promised to find more if they were allowed to live. Pash-Grod accepted their bribe and moved his people away from the crowded coast. As they went, Pash-Grod offered the same arrangement to other humans because he had grown fond of gold and wanted to increase the size of his collection. Of course he wasn't sharing, and the other members of his tribe could not see any benefit to leaving humans unmolested. Some grumbled, but not too loudly."
		[/part]
		
		[part]
			story= _ "The tribe followed trails of their people around the Heart Mountains and then north, but they found that much of the territory was already claimed by other orcs. Pash-Grod didn't want trouble with his own race, so they kept moving north until finally they found a home in a cave with a small forest nearby. Pash-Grod settled down and sent wolf riders south to collect more treasure from the humans. As they filled their cave, and the corners became packed with filth, many orcs wondered aloud why they hadn't settled in one of the nicer areas they had passed. The grumbling got louder until everyone knew that a new leader would have the support of the tribe. It was just a question of which clan was going to challenge Pash-Grod first...."
		[/part]
		
		[part]
			background=early_farnorth.jpg
			show_title=yes
			{NEW_BATTLE 732 232}
		[/part]
	[/story]
	
	name= _ "New Leader"
	map_data="{~add-ons/The_Founding_of_Borstep/maps/New_Leader.map}"

	id=New_Leader
	next_scenario=Thieves
	
# The map has an underground and above ground section. Time works differently
# in each.
	{UNDERGROUND}
	{PLAYLIST}

	[time_area]
		x=17,    18,    19,    20,    21,    22,    23,    24,    24,    25,    25,    26,    27,    28,    29-33
		y=20-22, 20-23, 20-23, 19-23, 19-23, 18-23, 16-23, 8-9,   13-23, 7-10,  13-23, 6-23,  4-23,  2-23,  0-23
		{DEFAULT_SCHEDULE}
	[/time_area]
	
	{TURNS4 32 32 34 36}

#define TREASURE
60#enddef

	[event]
		name=prestart

		[objectives]
			side=1
			[objective]
				description= _ "Become the leader of your tribe by killing the rival leaders."
				condition=win
			[/objective]
			
			# There is a macro for this, but we can't use it because the
			# leader's name is different in the first scenario:
			[objective]
				description= _ "Death of Ubor"
				condition=lose
			[/objective]
			[objective]
				description= _ "Run out of turns"
				condition=lose
			[/objective]

			note={EARLY_FINISH_BONUS_NOTE}+{NEW_GOLD_CARRYOVER_NOTE_40}
		[/objectives]
		
		[set_variable]
			name=gold_guards_passive
			value=yes
		[/set_variable]
		[set_variable]
			name=num_wolves
			value=0
		[/set_variable]
		[set_variable]
			name=shaman_heals_left
			value=3
		[/set_variable]
		[set_variable]
			name=tunnel_found
			value=yes
		[/set_variable]
		[set_variable]
			name=can_recruit_archers
			value=no
		[/set_variable]
		[set_variable]
			name=can_recruit_assassins
			value=no
		[/set_variable]
		[set_variable]
			name=can_recruit_wolf_riders
			value=no
		[/set_variable]

#ifndef EASY
		[terrain]
			x,y=14,5
			terrain=Uu^Vud
		[/terrain]
		[terrain]
			x,y=21,9
			terrain=Uu
		[/terrain]
#endif
	[/event]

	[side]
		# There is a macro for this, but we can't use it because the leader's
		# name is different on the first scenario:
		side=1
		controller=human
		team_name=Ubor
		user_team_name= _ "Ubor's Clan"

		type=Grunt Leader
		id=Krag-Ubor
		name=Ubor
		canrecruit=yes
		unrenamable=yes
		profile=portraits/orcs/transparent/grunt-3.png
		
		[modifications]
			{TRAIT_STRONG}
			{TRAIT_RESILIENT}
		[/modifications]

		recruit=Orcish Grunt, Goblin Spearman
		{GOLD4 100 100 130 180}
		shroud=yes
		shroud_data="|0000000000000000000000000000000000
|0000000000000000111110000000000000
|0000000000000011111110000000000000
|0000000000001111111111000000000000
|0000000000011111111111000000000000
|0000000011111111111111000000000011
|0000000111111111111110000000000111
|0000000111111110111110000000000111
|0000000111111100000000000000000111
|0000000011111110000000000000000011
|0000000111111110000000000000000111
|0000000011111111000000000000000011
|0000000111111110000000000000000111
|0000000011111110000000000000000011
|0000000011111100000000000000000011
|0000000001111110000000000000000001
|0000000001111100000000000000000001
|0000000001111100000000000000000001
|0000000001111100100000000000000001
|0000000001111100000000000000000001
|0000000001111100000000000000000001
|0000000000111110000000000000000000
|0000000000111110000000000000000000
|0000000000011111111000000000000000
|0000000000011111111000000000000000
|0000000000001111111100000000000000
|0000000000001111111000000000000000
|0000000000001111111000000000000000
|0000000000011111000000000000000000
|0000000000011111000000000000000000
|0000000111111110000000000000000111
|0000011111111110000000000000011111
|0000111111111100000000000000111111
|0000111111111100000000000000111111"

	[/side]

	[side]
		side=2
		controller=ai
		color=green
		team_name=dead guy
		user_team_name= _ "Pash-Grod"

		type=Orcish Warlord
		id=Pash-Grod
		name=Pash-Grod
		profile="portraits/transparent/Pash-Grod.png"
		canrecruit=yes

		gold=0
		income=-2
	[/side]
	
	[side]
		side=3
		controller=ai
		color=blue
		team_name=assassins
		user_team_name= _ "Al Hauk's Assassins"

		type=Orcish Slayer 2
		id=Al Hauk
		name=Al Hauk
		canrecruit=yes

		[ai]
			village_value=0
			[target]
				side=1
				value=100
			[/target]
			[target]
				side=4
				value=0
			[/target]
			[avoid]
				# Keeps them off the med kit
				x,y=3,6
			[/avoid]
			caution=0
			leader_aggression=-1
		[/ai]
		{GOLD4 150 200 300 400}
		{INCOME4 10 12 14 14}
		recruitment_pattern= fighter, fighter, mixed fighter, mixed fighter, mixed fighter
		recruit=Orcish Assassin, Goblin Spearman, Goblin Impaler, Orcish Slayer, Goblin Rouser
	[/side]
	#ifdef EASY
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Orcish Assassin) 3}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Goblin Impaler) 1}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Goblin Rouser) 2}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Orcish Slayer) 1}
	#endif
	#ifdef NORMAL
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Orcish Assassin) 4}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Goblin Impaler) 2}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Goblin Rouser) 2}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Orcish Slayer) 1}
	#endif
	#ifdef HARD
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Orcish Assassin) 5}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Goblin Rouser) 2}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Goblin Impaler) 4}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Orcish Slayer) 2}
	#endif
	#ifdef NIGHTMARE
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Orcish Assassin) 7}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Goblin Rouser) 3}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Goblin Impaler) 5}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Orcish Slayer) 3}
	#endif
	
	[side]
		side=4
		controller=ai
		color=purple
		team_name=wolf riders
		user_team_name= _ "Grashnok's Wolves"

		type=Goblin Pillager
		id=Grashnok
		name=Grashnok
		canrecruit=yes

		[ai]
			village_value=0
			[target]
				side=1
				value=100
			[/target]
			[target]
				side=3
				value=0
			[/target]
			[avoid]
				x,y=3,6
			[/avoid]
		[/ai]
		[ai]
			turns=2-6
			[leader_goal]
				x,y=15,9
			[/leader_goal]
		[/ai]
		
		# The wolf riders need to be powerful enough to make it difficult
		# for the player to emerge, but if they get too powerful, they actually
		# make it easier, because they kill too many assassins.
		{GOLD4 217 251 315 315}
		# 217= 9 level ones, 2 level twos
		# 251= 11 level ones, 2 level twos
		# 315= 11 level ones, 4 level twos

		recruit=Wolf Rider, Goblin Knight
	[/side]
	
	{LIMIT_RECRUITS 4 (Goblin Knight) 2}
	
	# The following macro adds the units to the recruit list, so they don't
	# need to be there at the start:
	#ifdef HARD
		{LIMIT_CONTEMPORANEOUS_RECRUITS 4 (Goblin Pillager) 2}
	#endif
	#ifdef NIGHTMARE
		{LIMIT_CONTEMPORANEOUS_RECRUITS 4 (Goblin Pillager) 2}
	#endif
	
	[side]
		side=5
		controller=ai
		color=white
		no_leader=yes
		team_name=Ubor,assassins,wolf riders
		user_team_name= _ "Neutral Shamans"
		[ai]
			ai_algorithm=idle_ai
		[/ai]
	[/side]
	
	{STARTING_VILLAGES 1 5}
	{STARTING_VILLAGES 2 7}
	{STARTING_VILLAGES 3 5}
	
	[event]
		name=prestart
		[unit]
			type=Orcish Grunt
			x=6
			y=12
			side=1
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_QUICK}
			[/modifications]
			id=Varlag
			name=Varlag
			overlays=misc/loyal-icon.png
			profile="portraits/orcs/transparent/grunt-2.png"
		[/unit]
		
		[unit]
			type=Goblin Spearman
			x,y=3,17
			name=Prudd
			random_traits=no
		[/unit]
		
		[unit]
			type=Goblin Spearman
			x,y=5,17
			name=Pronk
			random_traits=no
		[/unit]
		
		[teleport]
			[filter]
				id=Al Hauk
			[/filter]
			x,y=13,11
		[/teleport]
		
		#define WOLF X Y
			[set_variable]
				name=num_wolves
				add=1
			[/set_variable]
			[if]
				[variable]
					name=num_wolves
					less_than=3
				[/variable]
				[then]
					[set_variable]
						name=image_string
						value=wolf.png
					[/set_variable]
					[set_variable]
						name=wolves[$num_wolves].facing
						value=se
					[/set_variable]
				[/then]
				[else]
					[set_variable]
						name=image_string
						value=wolf.png~FL()
					[/set_variable]
					[set_variable]
						name=wolves[$num_wolves].facing
						value=sw
					[/set_variable]
				[/else]
			[/if]
			[item]
				image=units/monsters/$image_string
				x={X}
				y={Y}
			[/item]
			[set_variable]
				name=wolves[$num_wolves].x
				value={X}
			[/set_variable]
			[set_variable]
				name=wolves[$num_wolves].y
				value={Y}
			[/set_variable]
			[clear_variable]
				name=image_string
			[/clear_variable]
		#enddef

		{WOLF 23 19}
		{WOLF 24 19}
		{WOLF 25 19}
		{WOLF 26 19}

		[unit]
			side=2
			type=Goblin Spearman
			id=gold_guard1
			generate_name=yes
			x,y=10,20
			[modifications]
				{TRAIT_WEAK}
			[/modifications]
		[/unit]
		[unit]
			side=2
			type=Goblin Spearman
			id=gold_guard2
			generate_name=yes
			x,y=11,22
			[modifications]
				{TRAIT_WEAK}
			[/modifications]
		[/unit]

		[unit]
			side=3
			type=Goblin Impaler
			random_traits=no
			id=engineer
			x,y=22,7
			[modifications]
				{TRAIT_WEAK}
			[/modifications]
		[/unit]

		[unit]
			side=5
			type=Orcish Shaman
			name=Erogrik
			id=Erogrik
			x,y=3,5
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_QUICK}
			[/modifications]
		[/unit]
		
		[store_unit]
			[filter]
				id=Pash-Grod
			[/filter]
			variable=pashgrog
		[/store_unit]
		[set_variable]
			name=pashgrog.hitpoints
			value=14
		[/set_variable]
		[set_variable]
			name=pashgrog.status.poisoned
			value=yes
		[/set_variable]
		[unstore_unit]
			variable=pashgrog
		[/unstore_unit]
		[clear_variable]
			name=pashgrog
		[/clear_variable]
		
		[item]
			image=scenery/trash.png
			x,y=18,15
		[/item]
		[item]
			image=scenery/trash.png
			x,y=19,15
		[/item]
		[item]
			image=scenery/village-human-burned4.png
			x,y=30,6
		[/item]
		[item]
			image=scenery/village-human-burned2.png
			x,y=28,17
		[/item]
		[item]
			image=items/bow.png
			x,y=10,17
		[/item]
		[item]
			image=items/gold-coins-medium.png
			x,y=9,22
		[/item]
		
		[gold]
			side=2
			amount={TREASURE}
		[/gold]
	[/event]

	[event]
		name=start
		
		{MOVE_UNIT id=Varlag 4 16}
		[message]
			speaker=Varlag
			message= _ "Ubor! There's action in the main chamber. Pash-Grod's been poisoned! You should come watch."
		[/message]
		
		[store_unit]
			[filter]
				id=Pash-Grod
			[/filter]
			variable=pashgrog
		[/store_unit]
		[set_variable]
			name=pashgrog.hitpoints
			value=6
		[/set_variable]
		[unstore_unit]
			variable=pashgrog
		[/unstore_unit]
		[clear_variable]
			name=pashgrog
		[/clear_variable]
		
		{FLOATING_TEXT id=Pash-Grod 255,0,0 "8"}
		{MOVE_UNIT id=Varlag 5 12}
		{MOVE_UNIT id=Krag-Ubor 6 12}

		[message]
			speaker=Al Hauk
			message= _ "...No, you idiot! Gold is for getting stuff you don't have, not for collecting and <i>storing</i>."
		[/message]
		
		[animate_unit]
			[filter]
				id=Pash-Grod
			[/filter]
			[primary_attack]
				name=greatsword
			[/primary_attack]
			flag=attack
			hits=no
			with_bars=yes
			[facing]
				x,y=13,11
			[/facing]
			
			[animate]
				[filter]
					id=Al Hauk
				[/filter]
				flag=dodge
				with_bars=yes
				[facing]
					x,y=14,11
				[/facing]
			[/animate]
		[/animate_unit]
		[message]
			speaker=Pash-Grod
			message= _ "Stand...still...(cough)"
		[/message]

		{FLOATING_TEXT id=Pash-Grod 255,0,0 "6"}

		[kill]
			id=Pash-Grod
			animate=yes
		[/kill]

		{MOVE_UNIT id=Grashnok 14 11}

		[message]
			speaker=Grashnok
			message= _ "Finally! I was tired that old fool. Now move out of the way, weakling."
		[/message]
		[message]
			speaker=Al Hauk
			message= _ "What? No way. I'm in charge!"
		[/message]
		[message]
			speaker=Varlag
			message= _ "They're both weaklings. Our clan in the strongest. We...uh...You should be the big boss."
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "Of course I should, and don't think that you can slack because we have the same father."
		[/message]
		[message]
			speaker=Varlag
			message= _ "No, no. I'm happy to help."
		[/message]
		[message]
			speaker=Al Hauk
			message= _ "I'm coming back with some of my clan, and we'll see who's weak, and who's dead!"
		[/message]
		{MOVE_UNIT (id=Al Hauk) 8 5}
		[teleport]
			[filter]
				id=Al Hauk
			[/filter]
			x,y=22,4
		[/teleport]

		[message]
			speaker=Grashnok
			message= _ "Maybe I should get some more expendable fighters too."
		[/message]
		{MOVE_UNIT id=Grashnok 24 19}
		[teleport]
			[filter]
				id=Grashnok
			[/filter]
			x,y=21,21
		[/teleport]

		{MOVE_UNIT id=Varlag 3 15}
		{MOVE_UNIT id=Krag-Ubor 4 17}

		[message]
			speaker=Krag-Ubor
			message= _ "All right you slugs, up! We're gonna' go bash some skulls!"
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "The bows got stowed in one of the southern tunnels, and some of you wimps can handle one of those, at least. Go find 'em."
		[/message]
		[message]
			speaker=narrator
			message= _ "Once any unit finds the bows, you will be able to recruit archers."
			image=wesnoth-icon.png
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "And someone get down to the wolf pens. We could use some speed."
		[/message]
		[message]
			speaker=narrator
			message= _ "If any unit reaches the wolf pens you will be able to recruit wolf riders. Also, up to four goblins who reach the wolf pens can mount wolves and become riders immediately. Level 1 goblins become level 2 riders."
			image=wesnoth-icon.png
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "Now move, maggots!"
		[/message]
	[/event]

	[event]
		name=moveto
		
		[filter]
			side=1
			x=6,8
			y=19,20
		[/filter]

		[message]
			speaker=unit
			message= _ "Look! There's a hole here behind this boulder."
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "I think anyone could squeeze through that."
		[/message]
		
		[terrain]
			x,y=7,20
			terrain=Uh
		[/terrain]
	[/event]
	
	# There is some impassible terrain to keep the wolves from coming in through
	# the south door. Eventually, it has to be removed so that the *player* can
	# get *out* that way. Turn 5 is the earliest a unit could get there.
	[event]
		name=turn 5
		[terrain]
			x=21, 20
			y=22, 19-21
			terrain=Hh
		[/terrain]
	[/event]

	# If the ai can get two units per turn, it would be possible for it to block
	# the narrow tunnels to the castle. If the leader stayed in the keep, he could
	# never be reached without some good luck. This event should keep the blocking
	# from being possible for the last few turns, giving the player a good chance
	# to win even if the leader doesn't attack and get himself killed that way.
	[event]
		name=turn 25
		[modify_side]
			side=3
			income=4
		[/modify_side]
	[/event]

# On the first turn, I don't want the AI to get only goblins, because they are
# slow enough to get blocked in their tunnel by the wolves. I want at least two
# assassins, so I'll just stick them in the castle manually. Since they just got
# "recruited", their moves are set to 0 this turn.
	[event]
		name=ai turn
		[unit]
			side=3
			type=Orcish Assassin
			generate_name=yes
			x,y=20,3
			moves=0
		[/unit]
		[unit]
			side=3
			type=Orcish Assassin
			generate_name=yes
			x,y=20,4
			moves=0
		[/unit]
	[/event]
	
	[event]
		name=moveto
		first_time_only=yes
		[filter]
			x=9,9,10,11,10
			y=22,21,21,21,22
			side=1
		[/filter]
		[if]
			[have_unit]
				id=gold_guard1
			[/have_unit]
			[then]
				[message]
					speaker=gold_guard1
					message= _ "Hey! You can't come in here. Pash-Grod said so."
				[/message]
				[message]
					speaker=gold_guard2
					message= _ "Yeah! What he said."
				[/message]
			[/then]
			[else]
				[message]
					speaker=gold_guard2
					message= _ "Hey! You can't come in here. Pash-Grod said so."
				[/message]
			[/else]
		[/if]
		[set_variable]
			name=gold_guards_passive
			value=no
		[/set_variable]
	[/event]
	
	[event]
		name=moveto
		first_time_only=yes
		[filter]
			x,y=9,22
			side=1
		[/filter]
		[message]
			speaker=unit
			message= _ "This must be the money Pash-Grod was collecting from the humans! There's a lot of gold here."
		[/message]
		[sound]
			name=gold.ogg
		[/sound]
		[gold]
			side=1
			amount={TREASURE}
		[/gold]
		[message]
			speaker=narrator
			message= _ "You receive {TREASURE} gold."
			image=wesnoth-icon.png
		[/message]
		[removeitem]
			x,y=9,22
		[/removeitem]
	[/event]
	
	[event]
		name=moveto
		first_time_only=yes

		[filter]
			[filter_location]
				terrain=Ke,Ce
			[/filter_location]
			side=1
		[/filter]
		
		[message]
			speaker=unit
			message= _ "I reached the wolf pens."
		[/message]
		[allow_recruit]
			type=Wolf Rider
		[/allow_recruit]
		[message]
			speaker=narrator
			message= _ "You can now recruit wolf riders!"
			image=wesnoth-icon.png
		[/message]
		[set_variable]
			name=can_recruit_wolf_riders
			value=yes
		[/set_variable]
	[/event]
	
	# This event replaces a goblin with a wolf rider if the goblin lands on a
	# (picture of a) wolf. It will make a wolf rider one level higher than the
	# goblin. If the unit on the wolf is not a goblin, the player gets a message
	# telling him to use a goblin next time.

	[event]
		name=moveto
		first_time_only=no
		
		[filter]
			[filter_location]
				terrain=Ke,Ce
			[/filter_location]
			side=1
		[/filter]
		
		# Check to see if the unit is standing on a wolf, and record the wolf's
		# number in "on_wolf" if so:
		[set_variable]
			name=on_wolf
			value=no
		[/set_variable]
		
		{FOREACH wolves wolf_num}
			[if]
				[and]
					[variable]
						name=wolves[$wolf_num].x
						equals=$unit.x
					[/variable]
					[variable]
						name=wolves[$wolf_num].y
						equals=$unit.y
					[/variable]
				[/and]
				[then]
					[set_variable]
						name=on_wolf
						value=$wolf_num
					[/set_variable]
				[/then]
			[/if]
		{NEXT wolf_num}
		
		# If the unit is not standing on a wolf, allow undo. Otherwise, check to
		# see if the unit is a goblin:
		[if]
			[variable]
				name=on_wolf
				equals=no
			[/variable]
			
			[then]  # (The unit is NOT on a wolf.)
				[allow_undo]
				[/allow_undo]
			[/then]
			
			[else]  # (The unit IS on a wolf.)
			
				# Now, if the unit is not a goblin, give the player a message. Otherwise, make the goblin unit a wolf rider:
				[if]
					[variable]
						name=unit.race
						not_equals=goblin
					[/variable]
					
					[then]  # (The unit is NOT a goblin.)
						[message]
							speaker=narrator
							message= _ "This unit is too heavy to ride a wolf. Use a goblin instead."
							image=wesnoth-icon.png
						[/message]
						
						[allow_undo]
						[/allow_undo]
					[/then]

					[else]  # (The unit IS a goblin.)
						# Set this wolf's location out of bounds to keep it from
						# being picked up again:
						[set_variable]
							name=wolves[$on_wolf].x
							value=0
						[/set_variable]
						
						# Wipe out the unit's goblin trait:
						[set_variables]
							name=unit.modifications
							mode=replace
							[value]
							[/value]
						[/set_variables]
						
						# And face it the right way:
						[set_variable]
							name=unit.facing
							value=$wolves[$on_wolf].facing
						[/set_variable]
						
						[unstore_unit]
							variable=unit
						[/unstore_unit]
						
						# Choose two new traits:
						[set_variable]
							name=trait1
							rand=strong,quick,resilient,intelligent
						[/set_variable]
						[set_variable]
							name=trait2
							rand=strong,quick,resilient,intelligent
						[/set_variable]
						# Change the second if it's the same as the first:
						[while]
							[variable]
								name=trait2
								equals=$trait1
							[/variable]
							[do]
								[set_variable]
									name=trait2
									rand=strong,quick,resilient,intelligent
								[/set_variable]
							[/do]
						[/while]
						{GIVE_TRAIT $unit.id $trait1}
						{GIVE_TRAIT $unit.id $trait2}
						[clear_variable]
							name=trait1
						[/clear_variable]
						[clear_variable]
							name=trait2
						[/clear_variable]

						# If the goblin is level 0, the wolf will be level 1.
						# But if the goblin is level 1, the wolf will be level 2.
						# There are two choices for a level-2 wolf rider, so
						# ask the player what they want:
						[if]
							[variable]
								name=unit.type
								equals=Goblin Spearman
							[/variable]
							[then]
								{ADVANCE_UNIT id=$unit.id (Wolf Rider)}
							[/then]
							
							[else]  # (We know it's a goblin, but not a spearman. It must be an Impaler or Rouser.)
								{ADVANCE_UNIT id=$unit.id (Goblin Knight,Goblin Pillager)}
							[/else]
						[/if]
						
						[removeitem]
							x=$unit.x
							y=$unit.y
						[/removeitem]
# 						# Remove the goblin...
# 						[kill]
# 							id=$unit.id
# 						[/kill]
# 						
# 						# ...and create a wolf rider with the same name and XP:
# 						[unit]
# 							type=$wolf_type
# 							x=$unit.x
# 							y=$unit.y
# 							name=$unit.name
# 							experience=$unit.experience
# 						[/unit]
# 						
# 						# Setting the moves left for the wolf had to wait until
# 						# it was fully created in case it turned out to be quick.
# 						# Now we can do it correctly:
# 						[store_unit]
# 							[filter]
# 								x=$unit.x
# 								y=$unit.y
# 							[/filter]
# 							variable=new_wolf
# 							kill=yes
# 						[/store_unit]
# 						[set_variable]
# 							name=new_wolf.moves
# 							add=$($unit.max_moves*-1)
# 						[/set_variable]
# 						[set_variable]
# 							name=new_wolf.moves
# 							add=$unit.moves
# 						[/set_variable]
# 						[unstore_unit]
# 							variable=new_wolf
# 						[/unstore_unit]
# 						
# 						[clear_variable]
# 							name=new_wolf
# 						[/clear_variable]
# 						[clear_variable]
# 							name=wolf_type
# 						[/clear_variable]
					[/else]  # (End of: The unit IS a goblin.)
				[/if]

			[/else]  # (End of: The unit IS on a wolf.)
		[/if]

		[clear_variable]
			name=on_wolf
		[/clear_variable]
	[/event]
	
	[event]
		name=moveto
		first_time_only=yes
		[filter]
			x,y=10,17
			side=1
		[/filter]

		[message]
			speaker=unit
			message= _ "I found the bows."
		[/message]
		[allow_recruit]
			type=Orcish Archer
		[/allow_recruit]
		[message]
			speaker=narrator
			message= _ "You can now recruit archers!"
			image=wesnoth-icon.png
		[/message]
		[removeitem]
			x,y=10,17
		[/removeitem]
		[set_variable]
			name=can_recruit_archers
			value=yes
		[/set_variable]
	[/event]
	
	[event]
		name=moveto
		first_time_only=yes
		[filter]
			x,y=22,3
			side=1
		[/filter]

		[message]
			speaker=unit
			message= _ "Hey! There are bottles of poison in here."
		[/message]
		[allow_recruit]
			type=Orcish Assassin
		[/allow_recruit]
		[message]
			speaker=narrator
			message= _ "You can now recruit assassins!"
			image=wesnoth-icon.png
		[/message]
		[set_variable]
			name=can_recruit_assassins
			value=yes
		[/set_variable]
	[/event]
	
	[event]
		name=turn refresh
		first_time_only=no

	# The gold guardians should stay put until someone tries to enter the room.
	# This sets their moves to 0 each turn unless they have been seen.
		[if]
			[variable]
				name=gold_guards_passive
				equals=yes
			[/variable]

			[then]
				[store_unit]
					[filter]
						side=2
						type=Goblin Spearman
					[/filter]
					kill=yes
					variable=gold_guards
				[/store_unit]
				{FOREACH gold_guards num}
				[set_variable]
					name=gold_guards[$num].moves
					value=0
				[/set_variable]
				[unstore_unit]
					variable=gold_guards[$num]
				[/unstore_unit]
				{NEXT num}
				[clear_variable]
					name=gold_guards
				[/clear_variable]
			[/then]
		[/if]

# The goblin engineer stays put until the bridge is done. This sets his moves to 0 until turn 6.
		[if]
			[variable]
				name=turn_number
				less_than=6
			[/variable]
			
			[then]
				[store_unit]
					[filter]
						side=3
						id=engineer
					[/filter]
					kill=yes
					variable=engineer
				[/store_unit]
				[set_variable]
					name=engineer.moves
					value=0
				[/set_variable]
				[unstore_unit]
					variable=engineer
				[/unstore_unit]
				[clear_variable]
					name=engineer
				[/clear_variable]
			[/then]
		[/if]
	[/event]
	
	# Bulid a bridge:
	[event]
		name=side_turn
		first_time_only=no
		[if]
			[and]
				[variable]
					name=side_number
					equals=3
				[/variable]
				[variable]
					name=turn_number
					equals=6
				[/variable]
			[/and]
			[then]
# 				[message]
# 					speaker=engineer
# 					message= _ "The back door bridge is almost done, boss."
# 				[/message]
				[terrain]
					x,y=21,8
					terrain=Qxu^Bs/
				[/terrain]
			[/then]
		[/if]
	[/event]

	# Set up the shaman healing event.
	# Shroud is not set for the ai, and since this event type depends on the
	# shroud, only the player can fire it.
	[event]
		name=sighted
		[filter]
			type=Orcish Shaman
		[/filter]
		
		[message]
			speaker=Krag-Ubor
			message= _ "Hey, you shamans, come out here and help us take control of this mess!"
		[/message]
		[message]
			speaker=unit
			message= _ "No, we will remain neutral. When the tribe has one leader, then we will lend our support. In the mean time, we will heal anyone who needs it, until our supplies run out."
		[/message]
		[item]
			image=items/medkit.png
			x,y=3,6
		[/item]
		[delay]
			delay=600
		[/delay]
		[message]
			speaker=narrator
			message= _ "When you move a unit onto the hex with the medical kit next to the shaman village, the shamans will immediately heal up to 16 points of damage, or heal 8 points and cure poison. This will work three times."
			image=wesnoth-icon.png
		[/message]
	
		[event]
			name=moveto
			first_time_only=no
			
			[filter]
				x,y=3,6
			[/filter]
			
			[if]
				[and]
					[variable]
						name=shaman_heals_left
						greater_than=0
					[/variable]
					[variable]
						name=unit.hitpoints
						less_than=$unit.max_hitpoints
					[/variable]
				[/and]
				
				[then]
					[if]
						[variable]
							name=unit.status.poisoned
							not_equals=yes
						[/variable]
						[then]
							[heal_unit]
								[filter]
									x=$unit.x
									y=$unit.y
								[/filter]
								amount=16
								animate=yes
							[/heal_unit]
						[/then]
						[else]
							# Unpoison:
							[store_unit]
								[filter]
									x=$unit.x
									y=$unit.y
								[/filter]
								variable=to_be_healed
							[/store_unit]
							[set_variable]
								name=to_be_healed.status.poisoned
								value=no
							[/set_variable]
							[unstore_unit]
								variable=to_be_healed
							[/unstore_unit]
							[clear_variable]
								name=to_be_healed
							[/clear_variable]
							
							# ...Then heal:
							[heal_unit]
								[filter]
									x=$unit.x
									y=$unit.y
								[/filter]
								amount=8
								animate=yes
							[/heal_unit]
						[/else]
					[/if]
					
					[message]
						speaker=unit
						message= _ "I feel much better."
					[/message]
					[if]
						[and]
							[variable]
								name=shaman_heals_left
								equals=3  # So this is the first time the player is using it...
							[/variable]
							[variable]
								name=unit.id
								not_equals=Krag-Ubor
							[/variable]
						[/and]
						[then]
							[message]
								speaker=Krag-Ubor
								message= _ "Then get back to work!"
							[/message]
						[/then]
					[/if]
					
					[set_variable]
						name=shaman_heals_left
						add=-1
					[/set_variable]
					[if]
						[variable]
							name=shaman_heals_left
							equals=0
						[/variable]
						[then]
							[removeitem]
								x,y=3,6
							[/removeitem]
						[/then]
					[/if]
				[/then]
				
				[else]
					[allow_undo]
					[/allow_undo]
				[/else]
			[/if]
		[/event]
	
	[/event]

	[event]
		name=enemies defeated
		
		[message]
			speaker=Krag-Ubor
			message= _ "I name myself Krag-Ubor! Does anyone else dispute my claim to leadership?"
		[/message]
		
		[store_unit]
			[filter]
				id=Krag-Ubor
			[/filter]
			variable=KU_stored
		[/store_unit]
		[set_variable]
			name=KU_stored.name
			value=Krag-Ubor
		[/set_variable]
		[unstore_unit]
			variable=KU_stored
		[/unstore_unit]
		
		[store_unit]
			[filter]
				id=Erogrik
			[/filter]
			variable=orcs
			kill=yes
		[/store_unit]
		[set_variable]
			name=orcs.overlays
			value="misc/loyal-icon.png"
		[/set_variable]
		
		[store_unit]
			[filter]
			[/filter]
			variable=orcs
			mode=append
		[/store_unit]
		
		{FOREACH orcs orc}
			[set_variable]
				name=orcs[$orc].side
				value=1
			[/set_variable]
			[unstore_unit]
				variable=orcs[$orc]
			[/unstore_unit]
		{NEXT orc}
		
		[clear_variable]
			name=orcs
		[/clear_variable]
				
		[message]
			speaker=narrator
			message= _ "(Silence)"
			image=wesnoth-icon.png
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "Good. Shamans?"
		[/message]
		
		[message]
			speaker=Erogrik
			message= _ "We recognize Krag-Ubor as leader of the tribe."
		[/message]
		[message]
			speaker=narrator
			message= _ "You can now recruit shamans!"
			image=wesnoth-icon.png
		[/message]
		
		[if]
			[variable]
				name=can_recruit_assassins
				equals=no
			[/variable]
			[then]
				[message]
					speaker=Krag-Ubor
					message= _ "I know there's poison stored around here somewhere. Find it."
				[/message]
				{NEAREST_UNIT $KU_stored.x $KU_stored.y side=1 near_unit}
				[message]
					speaker=$near_unit.id
					message= _ "Right away, boss."
				[/message]
				[teleport]
					[filter]
						id=$near_unit.id
					[/filter]
					clear_shroud=yes
					animate=yes
					x,y=22,3
				[/teleport]
				
				[message]
					speaker=$near_unit.id
					message= _ "Here it is. There are lots of bottles in here."
				[/message]
				[allow_recruit]
					type=Orcish Assassin
				[/allow_recruit]
				[message]
					speaker=narrator
					message= _ "You can now recruit assassins!"
					image=wesnoth-icon.png
				[/message]
			[/then]
		[/if]
		
		# This variable keeps this unit from being reused. It would probably
		# happen otherwise:
		[set_variable]
			name=last_unit_id
			value=$near_unit.id
		[/set_variable]
		
		[set_variable]
			name=near_unit
			value=""
		[/set_variable]
		
		[if]
			[variable]
				name=can_recruit_wolf_riders
				equals=no
			[/variable]
			[then]
				[message]
					speaker=Krag-Ubor
					message= _ "Hey, you! Go down to the wolf pens, and bring up some wolves."
				[/message]
				# "near_unit" will be a goblin, or, if there isn't one, an archer,
				# and if neither of those exist, anything else:
				{NEAREST_UNIT $KU_stored.x $KU_stored.y race=goblin near_unit}
				[if]
					[variable]
						name=near_unit
						equals=""
					[/variable]
					[then]
						{NEAREST_UNIT $KU_stored.x $KU_stored.y (type=Orcish Archer) near_unit}
					[/then]
				[/if]
				[if]
					[variable]
						name=near_unit
						equals=""
					[/variable]
					[then]
						{NEAREST_UNIT $KU_stored.x $KU_stored.y side=1 near_unit}
					[/then]
				[/if]
				[message]
					speaker=$near_unit.id
					message= _ "Um, can't someone else do that?"
				[/message]
				[message]
					speaker=Krag-Ubor
					message= _ "NO!"
				[/message]
				[teleport]
					[filter]
						id=$near_unit.id
					[/filter]
					clear_shroud=yes
					animate=yes
					x,y=24,18
				[/teleport]
				
				[redraw][/redraw]
				[allow_recruit]
					type=Wolf Rider
				[/allow_recruit]
				[message]
					speaker=narrator
					message= _ "You can now recruit wolf riders!"
					image=wesnoth-icon.png
				[/message]
			[/then]
			# It is unlikely that this unit, down by the wolf pens will be the
			# nearest to Krag-Ubor, so it probably won't get reused, and it's
			# not a huge deal if it does. We don't need another variable to
			# keep it from happening.
		[/if]
		
		[if]
			[variable]
				name=can_recruit_archers
				equals=no
			[/variable]
			[then]
				[message]
					speaker=Krag-Ubor
					message= _ "You! Go find where the bows are kept."
				[/message]
				{NEAREST_UNIT $KU_stored.x $KU_stored.y side=1 near_unit}
				[message]
					speaker=$near_unit.id
					message= _ "Got it boss."
				[/message]
				[teleport]
					[filter]
						id=$near_unit.id
					[/filter]
					clear_shroud=yes
					animate=yes
					x,y=10,17
				[/teleport]
				
				[message]
					speaker=$near_unit.id
					message= _ "Here they are."
				[/message]
				[allow_recruit]
					type=Orcish Archer
				[/allow_recruit]
				[message]
					speaker=narrator
					message= _ "You can now recruit archers!"
					image=wesnoth-icon.png
				[/message]
				[removeitem]
					x,y=10,17
				[/removeitem]
			[/then]
		[/if]
		
		[message]
			speaker=Krag-Ubor
			message= _ "We're moving out right away."
		[/message]
		
		[clear_variable]
			name=got_gold
		[/clear_variable]
		[clear_variable]
			name=tunnel_found
		[/clear_variable]
		[clear_variable]
			name=can_recruit_archers
		[/clear_variable]
		[clear_variable]
			name=can_recruit_assassins
		[/clear_variable]
		[clear_variable]
			name=can_recruit_wolf_riders
		[/clear_variable]
		[clear_variable]
			name=near_unit
		[/clear_variable]
		[clear_variable]
			name=last_unit_id
		[/clear_variable]
		[clear_variable]
			name=shaman_heals_left
		[/clear_variable]
		[clear_variable]
			name=wolves
		[/clear_variable]
		[clear_variable]
			name=num_wolves
		[/clear_variable]
		[clear_variable]
			name=gold_guards_passive
		[/clear_variable]
		[clear_variable]
			name=KU_stored
		[/clear_variable]

		[endlevel]
			result=victory
			bonus=yes
			{NEW_GOLD_CARRYOVER 40}
		[/endlevel]
	[/event]
	
	{CLEAR_UNIT_LIMITS}
	{DEFEAT_EVENTS}
[/scenario]